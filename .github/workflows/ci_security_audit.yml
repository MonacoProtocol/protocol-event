name: CI - Security Audits

on:
  schedule:
    - cron: '0 0 * * *'

jobs:

  cargo-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cargo Audit
        uses: actions-rs/audit-check@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  yarn-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Yarn Cache
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'

      - name: Run Yarn Audit
        uses: pragatheeswarans/yarn-audit-action@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          label: Security

  deploy-audit:
    runs-on: ubuntu-latest

    env:
      SOLANA_PATH: /home/runner/.local/share/solana/install/active_release/bin
      WALLET_PASSPHRASE: ${{ secrets.WALLET_PASSPHRASE }}
      WALLET_MANAGER: ./ci/wallet_manager
      SECURITY_MANAGER: ./ci/security_manager
      ENVIRONMENT: testnet
      NUM_PROGRAMS: 1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Solana Cache
        id: cache-solana
        uses: actions/cache@v2
        with:
          path: ~/.local/share/solana/
          key: ${{ runner.os }}-solana-${{ secrets.ORG_SOLANA_VERSION }}

      - name: Set Solana Path
        run: |
          echo "${{ env.SOLANA_PATH }}" >> $GITHUB_PATH

      - name: Decrypt wallet and Set Keypair
        shell: bash
        run: |
          ${{ env.WALLET_MANAGER }}/decrypt_wallet.sh
          ${{ env.WALLET_MANAGER }}/set_keypair.sh

      - name: Audit Program Authority
        run: |
          bash ${{ env.SECURITY_MANAGER }}/authority_check.sh -e ${{ env.ENVIRONMENT }} -n ${{ env.NUM_PROGRAMS }}

      - name: Remove Wallet Secret
        shell: bash
        run: |
          ${{ env.WALLET_MANAGER }}/decrypt_wallet_cleanup.sh

  program-audit:
    runs-on: ubuntu-latest

    env:
      SOLANA_PATH: /home/runner/.local/share/solana/install/active_release/bin
      SECURITY_MANAGER: ./ci/security_manager
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ENVIRONMENT: testnet
      PROGRAM: externalevent

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Solana Cache
        id: cache-solana
        uses: actions/cache@v2
        with:
          path: ~/.local/share/solana/
          key: ${{ runner.os }}-solana-${{ secrets.ORG_SOLANA_VERSION }}

      - name: Set Solana Path
        run: |
          echo "${{ env.SOLANA_PATH }}" >> $GITHUB_PATH

      - name: Audit Deployed Programs
        run: |
          bash ${{ env.SECURITY_MANAGER }}/verify_program.sh -p ${{ env.PROGRAM }} -e ${{ env.ENVIRONMENT }} -b ${{ secrets.AWS_S3_PROGRAMS }}
