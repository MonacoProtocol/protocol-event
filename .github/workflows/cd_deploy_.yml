name: CD - Workflow Deploy Program
on:
  workflow_call:
    inputs:
      deploy_type:
        type: string
        required: true
      build:
        type: string
        required: true
      environment:
        type: string
        required: true
      note:
        type: string
        required: false
      solana_version:
        type: string
        required: true
    secrets:
      access_key_id:
        required: true
      access_key:
        required: true
      region:
        required: true
      wallet_pass:
        required: true
      gh_token:
        required: true

jobs:
  deploy_program:
    runs-on: ubuntu-latest

    env:
      SOLANA_VERSION: ${{ inputs.solana_version }}
      SOLANA_PATH: /home/runner/.local/share/solana/install/active_release/bin
      DEVNET_URL: https://api.devnet.solana.com
      TESTNET_URL: https://api.testnet.solana.com
      WALLET: $HOME/secrets/wallet.json
      WALLET_PASSPHRASE: ${{ secrets.wallet_pass }}
      WALLET_MANAGER: ./ci/wallet_manager
      DEPLOY_MANAGER: ./ci/deploy_manager
      BUILD_MANAGER: ./ci/build_manager
      DEPLOY_TYPE:  ${{ inputs.deploy_type}}
      ENVIRONMENT: ${{ inputs.environment}}
      BUILD: ${{ inputs.BUILD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.access_key }}
      AWS_REGION: ${{ secrets.region }}
      BUCKET: betdex-core-programs

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Solana Cache
        id: cache-solana
        uses: actions/cache@v2
        with:
          path: ~/.local/share/solana/
          key: ${{ runner.os }}-solana-${{ env.SOLANA_VERSION }}

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.cargo/bin/
            /home/runner/.cargo/registry/index/
            /home/runner/.cargo/registry/cache/
            /home/runner/.cargo/git/db/
            /home/runner/.cargo/.crates.toml
            /home/runner/.cargo/.crates2.json
            target/bpfel-unknown-unknown/
            target/debug/
            target/release/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          rustup default stable
          SOLANA_INSTALLER_URL=https://release.solana.com/${{ env.SOLANA_VERSION }}/install
          echo $SOLANA_INSTALLER_URL
          sh -c "$(curl -sSfL $SOLANA_INSTALLER_URL)"

      - name: Set Solana Path
        run: |
          echo "${{ env.SOLANA_PATH }}" >> $GITHUB_PATH

      - name: Check Solana Version
        run: |
          solana --version

      - name: Install anchor
        run: |
          sudo apt update
          sudo apt install -y libudev-dev
          sudo apt install -y pkg-config
          ANCHOR_VERSION=`grep -A1 'name = "anchor-lang"' Cargo.lock | tail -n 1 | cut -d = -f 2 | xargs`
          echo "Installing anchor-cli version ${ANCHOR_VERSION}"
          cargo install --git https://github.com/coral-xyz/anchor --tag v${ANCHOR_VERSION} anchor-cli --locked
          anchor --version

      - name: Other dependencies
        run: |
          sudo apt-get install -y jq

      - name: Download Program Artifacts
        run: |
          bash ${{ env.BUILD_MANAGER }}/download_artifact.sh -b ${{ env.BUILD }} -t ${{ env.DEPLOY_TYPE }} -a build -o target/deploy
          bash ${{ env.BUILD_MANAGER }}/download_artifact.sh -b ${{ env.BUILD }} -t ${{ env.DEPLOY_TYPE }} -a idl -o target/idl

      - name: Decrypt wallet and Set Keypair
        run: |
          bash ${{ env.WALLET_MANAGER }}/decrypt_wallet.sh
          bash ${{ env.WALLET_MANAGER }}/set_keypair.sh

      - name: Deploy Program & Update IDL
        run: |
          bash ${{ env.DEPLOY_MANAGER }}/deploy_program.sh -e ${{ env.ENVIRONMENT }} -f target/deploy/${{ env.BUILD }}.so
          bash ${{ env.DEPLOY_MANAGER }}/update_idl.sh -e ${{ env.ENVIRONMENT }} -f target/idl/${{ env.BUILD }}.json

      - name: Remove Wallet Secret
        run: |
          bash ${{ env.WALLET_MANAGER }}/decrypt_wallet_cleanup.sh

  log_deploy:
      needs: deploy_program
      runs-on: ubuntu-latest

      env:
        ENVIRONMENT: ${{ inputs.environment}}
        BUILD: ${{ inputs.BUILD }}
        LOG_BRANCH: "deploy-${{ github.run_number }}"
        NOTE: ${{ inputs.note }}
        GITHUB_TOKEN: ${{ secrets.gh_token }}
        AWS_ACCESS_KEY_ID: ${{ secrets.access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.access_key }}
        AWS_REGION: ${{ secrets.region }}
        BUCKET: betdex-core-programs
        DEPLOY_TYPE:  ${{ inputs.deploy_type}}

      steps:
        - uses: actions/checkout@v2

        - name: Update Deploy Log
          run: |
            ./ci/deploy_manager/update_history.sh \
            -t ${{ env.DEPLOY_TYPE }} \
            -a ${{ github.actor }} \
            -e ${{ env.ENVIRONMENT }} \
            -b ${{ env.BUILD }} \
            -n "${{ env.NOTE }}"

        - name: Commit Log Changes
          run: |
            git config --global user.email "dexterbot@betdex.com"
            git config --global user.name "Dexter"
            git checkout -b ${{ env.LOG_BRANCH }}
            git status
            git add ./ci/
            git commit -m 'Updated deploy history for ${{ env.BUILD }} on ${{ env.ENVIRONMENT }}'
            git push --set-upstream origin ${{ env.LOG_BRANCH }}
          env:
            GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

        - name: Create PR
          run: |
            gh pr create --title "[DEPLOY] External Events ${{ env.BUILD }} on ${{ env.ENVIRONMENT }}" --body "Update deploy history please"
          env:
            GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
